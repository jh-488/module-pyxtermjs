{"mappings":"ACAA,CAAA,SAA2CA,CAAAA,EAAMC,CAAAA;IAC1B,YAAA,OAAZC,WAA0C,YAAA,OAAXC,SACxCA,OAAOD,OAAAA,GAAUD,MACQ,cAAA,OAAXG,UAAyBA,OAAOC,GAAAA,GAC9CD,OAAO,EAAA,EAAIH,KACe,YAAA,OAAZC,UACdA,QAAkB,QAAA,GAAID,MAEtBD,EAAe,QAAA,GAAIC;AACpB,EAAEK,MAAM,I,A,C;Q;Q,I,I,C;Q,O,A,C;Y,I,I;Y,O,c,C,G,c;gB,O,C;Y,I,E,Q,G,K,GCcT,EAAA,QAAA,GAAA;gBAGS,SAASE,CAAAA,EAAAA;oBACdC,IAAAA,CAAKC,SAAAA,GAAYF;gBACnB;gBAEO,UAAAG,CAAiB;gBAEjB,MAAAC;oBACL,MAAMC,IAAOJ,IAAAA,CAAKK,iBAAAA;oBAClB,IAAA,CAAKD,KAAAA,CAASJ,IAAAA,CAAKC,SAAAA,IAAaK,MAAMF,EAAKG,IAAAA,KAASD,MAAMF,EAAKI,IAAAA,GAC7D;oBAIF,MAAMC,IAAQT,IAAAA,CAAKC,SAAAA,CAAkBS,KAAAA;oBAGjCV,IAAAA,CAAKC,SAAAA,CAAUO,IAAAA,KAASJ,EAAKI,IAAAA,IAAQR,IAAAA,CAAKC,SAAAA,CAAUM,IAAAA,KAASH,EAAKG,IAAAA,IACpEE,CAAAA,EAAKE,cAAAA,CAAeC,KAAAA,IACpBZ,IAAAA,CAAKC,SAAAA,CAAUY,MAAAA,CAAOT,EAAKG,IAAAA,EAAMH,EAAKI,IAAAA,CAAAA;gBAE1C;gBAEO,oBAAAH;oBACL,IAAA,CAAKL,IAAAA,CAAKC,SAAAA,EACR;oBAGF,IAAA,CAAKD,IAAAA,CAAKC,SAAAA,CAAUa,OAAAA,IAAAA,CAAYd,IAAAA,CAAKC,SAAAA,CAAUa,OAAAA,CAAQC,aAAAA,EACrD;oBAIF,MAAMN,IAAQT,IAAAA,CAAKC,SAAAA,CAAkBS,KAAAA,EAC/BN,IAA0BK,EAAKE,cAAAA,CAAeK,UAAAA;oBAEpD,IAA4B,MAAxBZ,EAAKa,GAAAA,CAAIC,IAAAA,CAAKC,KAAAA,IAAwC,MAAzBf,EAAKa,GAAAA,CAAIC,IAAAA,CAAKE,MAAAA,EAC7C;oBAGF,MAAMC,IAAuD,MAAtCrB,IAAAA,CAAKC,SAAAA,CAAUqB,OAAAA,CAAQC,UAAAA,GAC5C,IAAId,EAAKe,QAAAA,CAASC,cAAAA,EAEdC,IAAqBC,OAAOC,gBAAAA,CAAiB5B,IAAAA,CAAKC,SAAAA,CAAUa,OAAAA,CAAQC,aAAAA,GACpEc,IAAsBC,SAASJ,EAAmBK,gBAAAA,CAAiB,YACnEC,IAAqBC,KAAKC,GAAAA,CAAI,GAAGJ,SAASJ,EAAmBK,gBAAAA,CAAiB,YAC9EI,IAAeR,OAAOC,gBAAAA,CAAiB5B,IAAAA,CAAKC,SAAAA,CAAUa,OAAAA,GAStDsB,IAAkBP,IAPjBC,CAAAA,SAASK,EAAaJ,gBAAAA,CAAiB,kBACpCD,SAASK,EAAaJ,gBAAAA,CAAiB,kBAAA,GAO3CM,IAAiBL,IANdF,CAAAA,SAASK,EAAaJ,gBAAAA,CAAiB,oBACxCD,SAASK,EAAaJ,gBAAAA,CAAiB,gBAAA,IAKiBV;oBAKhE,OAJiB;wBACfd,MAAM0B,KAAKC,GAAAA,CA/DI,GA+DcD,KAAKK,KAAAA,CAAMD,IAAiBjC,EAAKa,GAAAA,CAAIC,IAAAA,CAAKC,KAAAA;wBACvEX,MAAMyB,KAAKC,GAAAA,CA/DI,GA+DcD,KAAKK,KAAAA,CAAMF,IAAkBhC,EAAKa,GAAAA,CAAIC,IAAAA,CAAKE,MAAAA;oBAAAA;gBAG5E;YAAA;Q,C,KDvFF;IAAA,CAAA","sources":["node_modules/xterm-addon-fit/lib/xterm-addon-fit.js","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/universalModuleDefinition","node_modules/xterm-addon-fit/lib/webpack:/FitAddon/src/FitAddon.ts"],"sourcesContent":[null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","self","activate","terminal","this","_terminal","dispose","fit","dims","proposeDimensions","isNaN","cols","rows","core","_core","_renderService","clear","resize","element","parentElement","dimensions","css","cell","width","height","scrollbarWidth","options","scrollback","viewport","scrollBarWidth","parentElementStyle","window","getComputedStyle","parentElementHeight","parseInt","getPropertyValue","parentElementWidth","Math","max","elementStyle","availableHeight","availableWidth","floor"],"version":3,"file":"index.28499bfa.js.map","sourceRoot":"/__parcel_source_root/"}